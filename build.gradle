// Configure build, dependencies, output jar, and Java compatibility
//----------------------------------------------------------------------------------------------------------------------
plugins {
    id 'java'
    id 'jacoco'
    id "com.eden.orchidPlugin" version "v0.1.7"
}

group 'com.eden'
version = 'v1.3.0'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

configurations {
    orchidDocs
}

sourceSets {
    orchidDocs
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile 'org.fusesource.jansi:jansi:1.14'

    orchidDocsCompile 'io.github.javaeden.orchid:OrchidCore:v0.1.0'
    orchidDocsCompile 'io.github.javaeden.orchid:OrchidJavadoc:v0.1.0'
    orchidDocsCompile 'io.github.javaeden.orchid:OrchidPages:v0.1.0'
    orchidDocsCompile 'io.github.javaeden.orchid:OrchidBsDoc:v0.1.0'
}

orchid {
    version = "${project.version}"
    theme   = "com.eden.orchid.bsdoc.BSDocTheme"
    baseUrl = ""
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from project.sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// Jacoco Code Coverage
//----------------------------------------------------------------------------------------------------------------------
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport
